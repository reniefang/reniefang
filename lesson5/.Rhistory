read.csv("/Users/liding/Documents/2011年5月河东村户籍信息.csv",header =FALSE,skip = 1)
read.csv("/Users/liding/Documents/2011年5月河东村户籍信息.csv",header =FALSE,skip = 1,encoding =utf-8)
read.csv("/Users/liding/Documents/2011年5月河东村户籍信息.csv",header =FALSE,skip = 1,encoding ="UTF-8")
read.csv("/Users/liding/Documents/2011年5月河东村户籍信息.csv",header =FALSE,skip = 1,encoding ="GB18030")
read.csv("/Users/liding/Documents/2011年5月河东村户籍信息1.csv",header =FALSE,skip = 1)
hedongd<- read.csv("/Users/liding/Documents/2011年5月河东村户籍信息1.csv",header =FALSE,skip = 1)
rm(dataset)
View(hedongd)
names(hedongd)<-c("code","cun","id","name","gender","ethic","bday","address","edu")
class(hedongd$bday)
table(hedongd$gender)
table(hedongd$ethic)
hedongd$byear=(integer(hedongd$bday/10000))
table(hedongd$byear)
hedongd$byear=as.integer(hedongd$bday/10000)
table(hedongd$byear)
hedongd$ethic[hedongd$ethic~="回"|hedongd$ethic~="汉"] <- NA
hedongd$ethic[hedongd$ethic != "回"|hedongd$ethic != "汉"] <- NA
table(hedongd$ethic)
hedongd<- read.csv("/Users/liding/Documents/2011年5月河东村户籍信息1.csv",header =FALSE,skip = 1)
names(hedongd)<-c("code","cun","id","name","gender","ethic","bday","address","edu")
table(hedongd$gender)
table(hedongd$ethic)
hedongd$byear=as.integer(hedongd$bday/10000)
table(hedongd$byear)
hedongd$ethic[hedongd$ethic != "回"&hedongd$ethic != "汉"] <- NA
table(hedongd$ethic)
hedongd %>% table(byear,ethic) %>% as.data.frame()
library(plyr)
hedongd %>% table(byear,ethic) %>% as.data.frame()
library(dplyr)
hedongd %>% table(byear,ethic) %>% as.data.frame()
table(hedongd$byear,hedongd$ethic) %>% as.data.frame()
year.eth<-table(hedongd$byear,hedongd$ethic) %>% as.data.frame()
names(year.eth)
View(year.eth)
year.eth<-table(hedongd$byear,hedongd$ethic)
table(hedongd$byear,hedongd$ethic)
year.eth<-as.data.frame(table(hedongd$byear,hedongd$ethic))
View(year.eth)
library(reshape2)
year.eth<- dcast(year.eth,id=(Var1))
year.eth<- dcast(year.eth,Var1~ Var2 + Freq)
View(year.eth)
year.eth<-as.data.frame(table(hedongd$byear,hedongd$ethic))
year.eth<- dcast(year.eth,Var1~ Var2)
View(year.eth)
names(year.eth)
names(year.eth)<-c("year","dong","dong2","hui","zhuang","sala","han","else")
year.eth$p=year.eth$hui/(year.eth$hui+year.eth$han)
View(year.eth)
plot(yeat.eth$p)
plot(year.eth$p)
library(ggplot2)
ggplot(data=year.eth,aes(x=byear,y=p))+
geom_bar(stat = "identity",fill = "blue")+
geom_text(aes(label=p),col="red",vjust=-0.7)
library(ggplot2)
ggplot(data=year.eth,aes(x=year,y=p))+
geom_bar(stat = "identity",fill = "blue")+
geom_text(aes(label=p),col="red",vjust=-0.7)
ggplot(data=hedongd,aes(x=byear,y=ethic))+
geom_bar(stat = "prop",fill = "blue")
ggplot(data=hedongd,aes(x=byear,y=ethic))+
geom_bar(prop,fill = "blue")
ggplot(data=hedongd,aes(x=byear,y=ethic))+
geom_bar(stat = "count",fill = "blue")
install.packages("Synth")
library(stargazer)
printo<- function(x, ...){
tab <- paste(capture.output(stargazer(x, ...)), collapse = '\n')
tf <- tempfile(fileext = ".html")
writeLines(tab, tf)
rstudioapi::viewer(tf)
}
printo((attitude), type = 'html', header = FALSE,table.attr = "class=nofluid", caption = "Try modify stargazer")
linear.1 <- lm(rating ~ complaints + privileges + learning + raises + critical, data=attitude)
linear.2 <- lm(rating ~ complaints + privileges + learning, data=attitude)
attitude$high.rating <- (attitude$rating > 70)
probit.model <- glm(high.rating ~ learning + critical + advance, data=attitude, family = binomial(link = "probit"))
printo(linear.1, linear.2, probit.model, title="Regression Results", align=TRUE, type = 'html', header = FALSE)
?stargazer
sjt.lm(linear.1, linear.2, probit.model)
library(sjPlot)
sjt.lm(linear.1, linear.2, probit.model)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE, show.std = TRUE, show.aic = TRUE,show.fstat = TRUE, show.se = TRUE)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE, show.std = TRUE, show.aic = TRUE, show.se = TRUE)
printo(linear.1, linear.2, probit.model, title="Regression Results", align=TRUE, type = 'html', header = FALSE)
printo((attitude), type = 'html', header = FALSE,table.attr = "class=nofluid", no.space=TRUE,caption = "Try modify stargazer")
printo(linear.1, linear.2, probit.model, title="Regression Results", align=TRUE, no.space=TRUE, type = 'html', header = FALSE)
printo(linear.1, linear.2, probit.model, title="中文标题会不会出问题", align=TRUE, no.space=TRUE, type = 'html', header = FALSE)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE, show.std = TRUE, show.aic = TRUE, show.se = TRUE)
library(hrbrthemes)
library(rvest)
library(tidyverse)
if (!require(hrbrthemes)) install.packages('hrbrthemes')
if (!require(rvest)) install.packages('rvest')
library(tidyverse)
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup() %>%
ggplot(aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16) +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
data <- mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup()
View(data)
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16) +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026"))
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16)
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
ggplot
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
if (!require(rvest)) install.packages('rvest')
library(tidyverse)
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
data <- mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup()
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
library(dplyr)
library(gganimate)
library(ggplot2)
library(readr)
gapminder <- read_tsv("gapminderDataFiveYear.tsv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gg_animate(gapminder_plot, filename = "gapminder-gganimate.gif")
gganimate
gganimate(gapminder_plot, filename = "gapminder-gganimate.gif")
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
library(dplyr)
library(gganimate)
library(ggplot2)
library(readr)
gapminder <- read_tsv("gapminderDataFiveYear.tsv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gapminder_plot
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
gapminder <- read.csv("https://stat.duke.edu/~mc301/data/gapminder.csv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gapminder_plot
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
getwd()
library(wpp2017)
library(ggplot2)
library(tidyverse)
library(stringr)
data(popM)
data(tfr)
data(tfrprojMed)
data(tfrproj80l)
data(tfrproj80u)
data(tfrproj95l)
data(tfrproj95u)
data(tfrprojHigh)
data(tfrprojLow)
tfr <- tfr %>%
filter(country_code==156)
tfrprojMed <- tfrprojMed %>%
filter(country_code==156) %>%
mutate(p="M")
tfrproj80l<- tfrproj80l %>%
filter(country_code==156)%>%
mutate(p="l80")
tfrproj80u<- tfrproj80u %>%
filter(country_code==156)%>%
mutate(p="u80")
tfrproj95l<- tfrproj95l %>%
filter(country_code==156)%>%
mutate(p="l95")
tfrproj95u <- tfrproj95u %>%
filter(country_code==156)%>%
mutate(p="u95")
tfrprojHigh<- tfrprojHigh %>%
filter(country_code==156)%>%
mutate(p="H")
tfrprojLow<- tfrprojLow %>%
filter(country_code==156)%>%
mutate(p="L")
tfrp <- rbind(tfrprojMed,tfrproj80l,tfrproj80u,tfrproj95l,
tfrproj95u,tfrprojHigh,tfrprojLow)
tfrp2 <- tfr %>%
inner_join(tfrp, by = "country_code") %>%
select(-c(1:2,name.y)) %>%
gather(year,tfr,1:30) %>%
mutate(year=as.integer(str_sub(year, 1, 4)))
ggplot(tfrp2,aes(x=year,y=tfr,pch=p,color=p,group=p)) +
geom_point() +
geom_line() +
ylab("TFR") +
theme(axis.text.x  = element_text(angle=90, vjust=0.5))
2.4+4.2+5.9
24-9
attr(tfr)
attr(tfr,dim
)
attr(tfr,“dim”）
attr(tfr,“dim”)
attr(tfr,"dim")
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
view(nc_bike_crash)
View(nc_bike_crash)
class(nc_bike_crash)
library(haven)
account <- read_sas("~/E/learning/Statistics/SAS/SAS金融数据分析/fdata/account.sas7bdat")
View(account)
library(haven)
X2015cgss20160803 <- read_dta("~/DATA/CGSS/2015/2015cgss20160803.dta")
View(X2015cgss20160803)
table(X2015cgss20160803$s1)
library(haven)
cgss2010n <- read_dta("~/DATA/CGSS/2010/cgss2010n.dta",encoding="GB2312")
View(cgss2010n)
library(haven)
cgss2010n <- read_dta("~/DATA/CGSS/2010/cgss2010n.dta",encoding="GB2312")
View(cgss2010n)
library(maptools)
setwd("/Users/liding/E/Bdata/rtemp/analysis/example/ch17/")
china_shp <- readShapePoly("bou2_4p.shp")
library(readr)
vmulud <- read_csv("/Users/liding/E/研究/城市研究/data/top1000townad_2016.csv")
ggplot(data = fortify(china_shp),
aes(long, lat, group=group)) +
geom_polygon(colour = "black",fill = NA) +
geom_path(color="black") +
geom_point(data=vmulud, aes(x=lng, y=lat), colour="pink",
alpha=0.5, inherit.aes=FALSE) +
stat_density2d(aes(x=lng,y=lat,fill=..level..,alpha=..level..),
size=1,bins=4,data=vmulud,geom='polygon',
inherit.aes=FALSE)+
coord_map() +
theme_bw()
library(ggplot2)
ggplot(data = fortify(china_shp),
aes(long, lat, group=group)) +
geom_polygon(colour = "black",fill = NA) +
geom_path(color="black") +
geom_point(data=vmulud, aes(x=lng, y=lat), colour="pink",
alpha=0.5, inherit.aes=FALSE) +
stat_density2d(aes(x=lng,y=lat,fill=..level..,alpha=..level..),
size=1,bins=4,data=vmulud,geom='polygon',
inherit.aes=FALSE)+
coord_map() +
theme_bw()
library(readr)
vmulud <- read_csv("/Users/liding/E/研究/城市研究/data/zhongdianzhenadd.csv")
names(vmulud[,5:6])<c("lng","lat")
names(vmulud[,5:6])<-c("lng","lat")
names(vmulud[6:7])<-c("lng","lat")
head(vmulud)
names(vmulud[6:7,])<-c("lng","lat")
names(vmulud)[6:7]<-c("lng","lat")
library(ggplot2)
chi<-get_map(location = 'china', zoom=4, maptype='terrain',source = "stamen")
library(maptools)
china_shp <- readShapePoly("/Users/liding/E/Bdata/rtemp/analysis/example/ch17/bou2_4p.shp")
ggplot(data = fortify(china_shp),
aes(long, lat, group=group)) +
geom_polygon(colour = "black",fill = NA) +
geom_path(color="black") +
geom_point(data=vmulud, aes(x=lng, y=lat), colour="pink",
alpha=0.5, inherit.aes=FALSE) +
stat_density2d(aes(x=lng,y=lat,fill=..level..,alpha=..level..),
size=1,bins=4,data=tmulu,geom='polygon',
inherit.aes=FALSE)+
coord_map() +
theme_bw()
ggplot(data = fortify(china_shp),
aes(long, lat, group=group)) +
geom_polygon(colour = "black",fill = NA) +
geom_path(color="black") +
geom_point(data=vmulud, aes(x=lng, y=lat), colour="pink",
alpha=0.5, inherit.aes=FALSE) +
stat_density2d(aes(x=lng,y=lat,fill=..level..,alpha=..level..),
size=1,bins=4,data=t=vmulud,geom='polygon',
inherit.aes=FALSE)+
coord_map() +
theme_bw()
ggplot(data = fortify(china_shp),
aes(long, lat, group=group)) +
geom_polygon(colour = "black",fill = NA) +
geom_path(color="black") +
geom_point(data=vmulud, aes(x=lng, y=lat), colour="pink",
alpha=0.5, inherit.aes=FALSE) +
stat_density2d(aes(x=lng,y=lat,fill=..level..,alpha=..level..),
size=1,bins=4,data=t=vmulud,geom='polygon',
inherit.aes=FALSE)+
coord_map() +
theme_bw()
ggplot(data = fortify(china_shp),
aes(long, lat, group=group)) +
geom_polygon(colour = "black",fill = NA) +
geom_path(color="black") +
geom_point(data=vmulud, aes(x=lng, y=lat), colour="pink",
alpha=0.5, inherit.aes=FALSE) +
stat_density2d(aes(x=lng,y=lat,fill=..level..,alpha=..level..),
size=1,bins=4,data=vmulud,geom='polygon',
inherit.aes=FALSE)+
coord_map() +
theme_bw()
names(vmulud)[6:7]<-c("lat","lng")
library(ggplot2)
library(maptools)
china_shp <- readShapePoly("/Users/liding/E/Bdata/rtemp/analysis/example/ch17/bou2_4p.shp")
ggplot(data = fortify(china_shp),
aes(long, lat, group=group)) +
geom_polygon(colour = "black",fill = NA) +
geom_path(color="black") +
geom_point(data=vmulud, aes(x=lng, y=lat), colour="pink",
alpha=0.5, inherit.aes=FALSE) +
stat_density2d(aes(x=lng,y=lat,fill=..level..,alpha=..level..),
size=1,bins=4,data=vmulud,geom='polygon',
inherit.aes=FALSE)+
coord_map() +
theme_bw()
library(ggplot2)
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), colour = "grey50") +
geom_point(aes(colour = country))
library(haven)
cgss2003 <- read_dta("~/E/Bdata/liding17/slides/lesson5/cgss2003.dta")
View(cgss2003)
library(haven)
CGSS2005c <- read_dta("~/DATA/CGSS/2003-2013/CGSS2005c.dta",encoding="GB2312")
View(CGSS2005c)
CGSS2005p <- read_dta("~/DATA/CGSS/2003-2013/CGSS2005p.dta",encoding="GB2312")
CGSS2006p <- read_dta("~/DATA/CGSS/2003-2013/CGSS2006p.dta",encoding="GB2312")
CGSS2003p <- read_dta("~/DATA/CGSS/2003-2013/CGSS2003p.dta",encoding="GB2312")
library(haven)
CGSS2003 <- read_sav("~/E/Bdata/liding17/slides/lesson5/CGSS2003.sav",encoding="GB2312")
View(CGSS2003)
library(haven)
CGSS2003 <- read_sav("~/E/Bdata/liding17/slides/lesson5/CGSS2003.sav",encoding="GB2312")
View(CGSS2003)
library(haven)
CGSS2003 <- read_sav("~/E/Bdata/liding17/slides/lesson5/CGSS2003.sav")
View(CGSS2003)
library(haven)
CGSS2003 <- read_sav("~/E/Bdata/liding17/slides/lesson5/CGSS2003.sav",Encoding="GB2312")
library(haven)
CGSS2003 <- read_sav("~/E/Bdata/liding17/slides/lesson5/CGSS2003.sav",Encoding(GB2312))
library(haven)
CGSS2003b <- read_sav("~/E/Bdata/liding17/slides/lesson5/CGSS2003b.sav",encoding="GB2312")
View(CGSS2003b)
library(haven)
CGSS2003b <- read_sav("~/E/Bdata/liding17/slides/lesson5/CGSS2003b.sav")
View(CGSS2003b)
cgss2003 <- read_dta("cgss2003.dta")
setwd("~/E/Bdata/liding17/slides/lesson5/")
cgss2003 <- read_dta("cgss2003.dta")
attr(cgss2003, 'variables')
attr(cgss2003$id, 'variables')
attr(cgss2003$id, 'label')
attr(cgss2003$province, 'label')
attr(cgss2003$province, 'labels')
library(sjmisc)
to_label(cgss2003,township)
cgss2003 <- to_label(cgss2003,township)
table$cgss2003$township
table(cgss2003$township)
cgss2003 <- read_dta("cgss2003.dta")
table(cgss2003$township)
table(cgss2003$sitetype)
cgss2003 <- to_label(cgss2003,sitetype)
table(cgss2003$sitetype)
attr(cgss2003$sitetype,label
)
attr(cgss2003$sitetype,"label")
attr(cgss2003$sitetype,"labels")
if(!require(sjmisc))
break
!require(sjmisc)
require(sjmisc)
library(sjPlot)
install.packages("Matrix", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(sjPlot)
install.packages("sjPlot")
library(sjPlot)
install.packages(c("bayesLife", "bayesPop", "bayesTFR", "ctv", "cubature", "dplyr", "plotrix", "quantmod", "Rcpp", "segmented", "spam", "webshot", "WhatIf", "wpp2017", "Zelig"))
install.packages(c("assertthat", "backports", "BH", "Blaunet", "boot", "car", "cartography", "checkmate", "classInt", "cluster", "coin", "crayon", "ctv", "curl", "data.table", "DBI", "deldir", "devtools", "doParallel", "dplyr", "effects", "ergm", "esc", "evaluate", "foreign", "formatR", "Formula", "gdata", "ggeffects", "ggrepel", "git2r", "glmnet", "gridExtra", "haven", "Hmisc", "htmlwidgets", "httpuv", "httr", "igraph", "irlba", "jsonlite", "lattice", "lme4", "mapproj", "maps", "markdown", "MASS", "MatchIt", "mcmc", "MCMCpack", "memoise", "mgcv", "modelr", "multcomp", "mvtnorm", "nlme", "NLP", "openssl", "pander", "pbkrtest", "PKI", "prettymapr", "psych", "quantreg", "R6", "rattle", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readstata13", "readxl", "rgdal", "rgeos", "rgl", "rJava", "rmarkdown", "rpart", "rsconnect", "rstudioapi", "sandwich", "scales", "scatterplot3d", "sem", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sourcetools", "sp", "spacetime", "SparseM", "spatstat", "spatstat.utils", "spdep", "splancs", "statmod", "statnet.common", "stm", "stringdist", "stringi", "survey", "survival", "tergm", "tibble", "tidyr", "tmcn", "viridis", "visNetwork", "withr", "XML", "xts", "Zelig", "ZeligChoice", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c("assertthat", "backports", "BH", "Blaunet", "boot", "car", "cartography", "checkmate", "classInt", "cluster", "coin", "crayon", "ctv", "curl", "data.table", "DBI", "deldir", "devtools", "doParallel", "dplyr", "effects", "ergm", "esc", "evaluate", "foreign", "formatR", "Formula", "gdata", "ggeffects", "ggrepel", "git2r", "glmnet", "gridExtra", "haven", "Hmisc", "htmlwidgets", "httpuv", "httr", "igraph", "irlba", "jsonlite", "lattice", "lme4", "mapproj", "maps", "markdown", "MASS", "MatchIt", "mcmc", "MCMCpack", "memoise", "mgcv", "modelr", "multcomp", "mvtnorm", "nlme", "NLP", "openssl", "pander", "pbkrtest", "PKI", "prettymapr", "psych", "quantreg", "R6", "rattle", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readstata13", "readxl", "rgdal", "rgeos", "rgl", "rJava", "rmarkdown", "rpart", "rsconnect", "rstudioapi", "sandwich", "scales", "scatterplot3d", "sem", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sourcetools", "sp", "spacetime", "SparseM", "spatstat", "spatstat.utils", "spdep", "splancs", "statmod", "statnet.common", "stm", "stringdist", "stringi", "survey", "survival", "tergm", "tibble", "tidyr", "tmcn", "viridis", "visNetwork", "withr", "XML", "xts", "Zelig", "ZeligChoice", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c("assertthat", "backports", "BH", "Blaunet", "boot", "car", "cartography", "checkmate", "classInt", "cluster", "coin", "crayon", "ctv", "curl", "data.table", "DBI", "deldir", "devtools", "doParallel", "dplyr", "effects", "ergm", "esc", "evaluate", "foreign", "formatR", "Formula", "gdata", "ggeffects", "ggrepel", "git2r", "glmnet", "gridExtra", "haven", "Hmisc", "htmlwidgets", "httpuv", "httr", "igraph", "irlba", "jsonlite", "lattice", "lme4", "mapproj", "maps", "markdown", "MASS", "MatchIt", "mcmc", "MCMCpack", "memoise", "mgcv", "modelr", "multcomp", "mvtnorm", "nlme", "NLP", "openssl", "pander", "pbkrtest", "PKI", "prettymapr", "psych", "quantreg", "R6", "rattle", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readstata13", "readxl", "rgdal", "rgeos", "rgl", "rJava", "rmarkdown", "rpart", "rsconnect", "rstudioapi", "sandwich", "scales", "scatterplot3d", "sem", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sourcetools", "sp", "spacetime", "SparseM", "spatstat", "spatstat.utils", "spdep", "splancs", "statmod", "statnet.common", "stm", "stringdist", "stringi", "survey", "survival", "tergm", "tibble", "tidyr", "tmcn", "viridis", "visNetwork", "withr", "XML", "xts", "Zelig", "ZeligChoice", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c("assertthat", "backports", "BH", "Blaunet", "boot", "car", "cartography", "checkmate", "classInt", "cluster", "coin", "crayon", "ctv", "curl", "data.table", "DBI", "deldir", "devtools", "doParallel", "dplyr", "effects", "ergm", "esc", "evaluate", "foreign", "formatR", "Formula", "gdata", "ggeffects", "ggrepel", "git2r", "glmnet", "gridExtra", "haven", "Hmisc", "htmlwidgets", "httpuv", "httr", "igraph", "irlba", "jsonlite", "lattice", "lme4", "mapproj", "maps", "markdown", "MASS", "MatchIt", "mcmc", "MCMCpack", "memoise", "mgcv", "modelr", "multcomp", "mvtnorm", "nlme", "NLP", "openssl", "pander", "pbkrtest", "PKI", "prettymapr", "psych", "quantreg", "R6", "rattle", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readstata13", "readxl", "rgdal", "rgeos", "rgl", "rJava", "rmarkdown", "rpart", "rsconnect", "rstudioapi", "sandwich", "scales", "scatterplot3d", "sem", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sourcetools", "sp", "spacetime", "SparseM", "spatstat", "spatstat.utils", "spdep", "splancs", "statmod", "statnet.common", "stm", "stringdist", "stringi", "survey", "survival", "tergm", "tibble", "tidyr", "tmcn", "viridis", "visNetwork", "withr", "XML", "xts", "Zelig", "ZeligChoice", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c("assertthat", "backports", "BH", "Blaunet", "boot", "car", "cartography", "checkmate", "classInt", "cluster", "coin", "crayon", "ctv", "curl", "data.table", "DBI", "deldir", "devtools", "doParallel", "dplyr", "effects", "ergm", "esc", "evaluate", "foreign", "formatR", "Formula", "gdata", "ggeffects", "ggrepel", "git2r", "glmnet", "gridExtra", "haven", "Hmisc", "htmlwidgets", "httpuv", "httr", "igraph", "irlba", "jsonlite", "lattice", "lme4", "mapproj", "maps", "markdown", "MASS", "MatchIt", "mcmc", "MCMCpack", "memoise", "mgcv", "modelr", "multcomp", "mvtnorm", "nlme", "NLP", "openssl", "pander", "pbkrtest", "PKI", "prettymapr", "psych", "quantreg", "R6", "rattle", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readstata13", "readxl", "rgdal", "rgeos", "rgl", "rJava", "rmarkdown", "rpart", "rsconnect", "rstudioapi", "sandwich", "scales", "scatterplot3d", "sem", "shiny", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sourcetools", "sp", "spacetime", "SparseM", "spatstat", "spatstat.utils", "spdep", "splancs", "statmod", "statnet.common", "stm", "stringdist", "stringi", "survey", "survival", "tergm", "tibble", "tidyr", "tmcn", "viridis", "visNetwork", "withr", "XML", "xts", "Zelig", "ZeligChoice", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
